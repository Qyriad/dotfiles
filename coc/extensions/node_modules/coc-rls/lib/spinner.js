// Copyright 2017 The RLS Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const coc_nvim_1 = require("coc.nvim");
let statusItem = coc_nvim_1.workspace.createStatusBarItem(100);
let spinnerTimer = null;
const spinner = ['◐', '◓', '◑', '◒'];
let shouldShown = true;
coc_nvim_1.events.on('BufEnter', () => tslib_1.__awaiter(this, void 0, void 0, function* () {
    yield wait(20);
    let document = yield coc_nvim_1.workspace.document;
    if (document && document.filetype == 'rust') {
        shouldShown = true;
        statusItem.show();
    }
    else {
        shouldShown = false;
        statusItem.hide();
    }
}));
function wait(ms) {
    return new Promise(resolve => {
        setTimeout(() => {
            resolve();
        }, ms);
    });
}
function startSpinner(prefix, postfix) {
    if (spinnerTimer != null) {
        clearInterval(spinnerTimer);
    }
    let state = 0;
    statusItem.text = '';
    if (shouldShown)
        statusItem.show();
    spinnerTimer = setInterval(() => {
        statusItem.text = prefix + ' ' + spinner[state] + ' ' + postfix;
        state = (state + 1) % spinner.length;
    }, 100);
}
exports.startSpinner = startSpinner;
function stopSpinner(message) {
    if (spinnerTimer !== null) {
        clearInterval(spinnerTimer);
    }
    spinnerTimer = null;
    statusItem.text = message || '';
}
exports.stopSpinner = stopSpinner;
//# sourceMappingURL=spinner.js.map