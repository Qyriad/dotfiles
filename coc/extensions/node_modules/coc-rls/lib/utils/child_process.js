// Copyright 2017 The RLS Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/**
 *  Ideally, this module should be replaced with `utils.promisefy()` introduced Node.js 8.
 *  But we might not replace these properly if it is not well typed.
 */
const child_process = tslib_1.__importStar(require("child_process"));
function execChildProcess(command) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const r = new Promise((resolve, reject) => {
            child_process.exec(command, {
                encoding: 'utf8',
            }, (error, stdout, stderr) => {
                if (!!error) {
                    reject(error);
                    return;
                }
                resolve({
                    stdout,
                    stderr,
                });
            });
        });
        return r;
    });
}
exports.execChildProcess = execChildProcess;
function execFile(command, args, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve, reject) => {
            child_process.execFile(command, args, Object.assign({}, options, { encoding: 'utf8' }), (error, stdout, stderr) => {
                if (!!error) {
                    reject(error);
                    return;
                }
                resolve({
                    stdout,
                    stderr,
                });
            });
        });
    });
}
exports.execFile = execFile;
//# sourceMappingURL=child_process.js.map