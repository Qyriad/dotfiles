import { IServiceProvider, ServiceStat, WorkspaceConfiguration } from 'coc.nvim';
import { DocumentSelector, Event } from 'vscode-languageserver-protocol';
import TypeScriptServiceClientHost from './typescriptServiceClientHost';
import { PluginManager } from '../utils/plugins';
export default class TsserverService implements IServiceProvider {
    private pluginManager;
    id: string;
    name: string;
    enable: boolean;
    selector: DocumentSelector;
    state: ServiceStat;
    clientHost: TypeScriptServiceClientHost;
    private _onDidServiceReady;
    readonly onServiceReady: Event<void>;
    private readonly disposables;
    private descriptions;
    constructor(pluginManager: PluginManager);
    readonly config: WorkspaceConfiguration;
    start(): Promise<void>;
    private ensureConfiguration;
    dispose(): void;
    restart(): Promise<void>;
    stop(): Promise<void>;
}
