import { Disposable } from 'vscode-languageserver-protocol';
import Uri from 'vscode-uri';
import LanguageProvider from './languageProvider';
import TypeScriptServiceClient from './typescriptServiceClient';
import { LanguageDescription } from './utils/languageDescription';
import { PluginManager } from '../utils/plugins';
export default class TypeScriptServiceClientHost implements Disposable {
    private readonly ataProgressReporter;
    private readonly typingsStatus;
    private readonly client;
    private readonly languages;
    private readonly languagePerId;
    private readonly disposables;
    private reportStyleCheckAsWarnings;
    constructor(descriptions: LanguageDescription[], pluginManager: PluginManager);
    dispose(): void;
    reset(): void;
    readonly serviceClient: TypeScriptServiceClient;
    reloadProjects(): void;
    getProvider(languageId: string): LanguageProvider;
    private configurationChanged;
    findLanguage(resource: Uri): LanguageProvider | null;
    handles(uri: string): boolean;
    private triggerAllDiagnostics;
    private diagnosticsReceived;
    private createMarkerDatas;
    private tsDiagnosticToLspDiagnostic;
    private getDiagnosticSeverity;
    private isStyleCheckDiagnostic;
}
