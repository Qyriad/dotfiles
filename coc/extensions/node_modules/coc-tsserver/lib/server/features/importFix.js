"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const coc_nvim_1 = require("coc.nvim");
const vscode_languageserver_protocol_1 = require("vscode-languageserver-protocol");
const helper_1 = require("../utils/helper");
class ImportFixProvider {
    constructor(bufferSyncSupport) {
        this.bufferSyncSupport = bufferSyncSupport;
    }
    provideCodeActions(document, _range, context, _token) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (this.bufferSyncSupport.hasPendingDiagnostics(document.uri)) {
                return [];
            }
            let diagnostics = context.diagnostics.filter(d => d.code == 2304);
            if (!diagnostics.length)
                return [];
            let edits = [];
            let names = [];
            let doc = coc_nvim_1.workspace.getDocument(document.uri);
            let command;
            for (const diagnostic of diagnostics) {
                let { range } = diagnostic;
                let line = doc.getline(range.start.line);
                let name = line.slice(range.start.character, range.end.character);
                if (names.indexOf(name) !== -1)
                    continue;
                if (helper_1.nodeModules.indexOf(name) !== -1) {
                    names.push(name);
                    edits.push({
                        range: vscode_languageserver_protocol_1.Range.create(0, 0, 0, 0),
                        newText: `import ${name} from '${name}'\n`
                    });
                    command = 'tsserver.organizeImports';
                }
            }
            let edit = {
                changes: {
                    [document.uri]: edits
                }
            };
            let cmd = null;
            if (command)
                cmd = {
                    title: `fix import`,
                    command: 'tsserver.organizeImports'
                };
            return [{
                    title: `Add import ${names.join(', ')}`,
                    edit,
                    command: cmd
                }];
        });
    }
}
exports.default = ImportFixProvider;
//# sourceMappingURL=importFix.js.map