"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const coc_nvim_1 = require("coc.nvim");
const vscode_languageserver_protocol_1 = require("vscode-languageserver-protocol");
const vscode_uri_1 = tslib_1.__importDefault(require("vscode-uri"));
const modules_1 = require("../utils/modules");
class InstallModuleCommand {
    constructor() {
        this.id = InstallModuleCommand.ID;
    }
    execute(uri, name) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield modules_1.installModules(uri, [name]);
        });
    }
}
InstallModuleCommand.ID = '_tsserver.installModule';
class InstallModuleProvider {
    constructor(client) {
        this.client = client;
        coc_nvim_1.commands.register(new InstallModuleCommand(), true);
    }
    provideCodeActions(document, _range, context, _token) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const uri = vscode_uri_1.default.parse(document.uri);
            if (uri.scheme != 'file')
                return null;
            let { diagnostics } = context;
            let diags = diagnostics.filter(s => s.code == 2307);
            let names = diags.map(o => {
                let ms = o.message.match(/module\s'(.+)'\./);
                return ms ? ms[1] : null;
            });
            names = names.filter(s => s != null);
            if (!names.length)
                return null;
            let actions = [];
            for (let name of names) {
                let title = `install ${name}`;
                let command = {
                    title: `install ${name}`,
                    command: InstallModuleCommand.ID,
                    arguments: [document.uri, name]
                };
                let codeAction = vscode_languageserver_protocol_1.CodeAction.create(title, command);
                actions.push(codeAction);
            }
            return actions;
        });
    }
}
exports.default = InstallModuleProvider;
//# sourceMappingURL=moduleInstall.js.map